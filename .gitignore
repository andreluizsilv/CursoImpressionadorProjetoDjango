# Arquivos DLL compilados / otimizados /
__pycache__/
*.py[bacalhau]]
*$py.class

# Extensões C
*.Então

# Distribuição / embalagem
. Pitão
construir/
ovos em desenvolvimento/
Dist/
Downloads/
ovo/
.ovo/
Lib/
lib64/
Partes/
sdist/
Var/
Rodas/
share/python-wheels/
*.egg-info/
.installed.cfg
*.ovo
MANIFESTO

# PyInstaller (em inglês)
# Normalmente, esses arquivos são escritos por um script python a partir de um modelo
#before PyInstaller constrói o exe, de modo a injetar data / outras informações nele.
*.manifesto
*.Especificação

# Logs do instalador
pip-log.txt
pip-delete-this-directory.txt

# Relatórios de teste / cobertura de unidades
htmlcov/
.Tox/
.Nox/
.cobertura
.cobertura.*
.cache
testes nasais.xml
cobertura.xml
*.cobrir
*.py, tampa
.hipótese/
.pytest_cache/
cobrir/

# Traduções
*.Mo
*.panela

# Django coisas:
*..log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Material do frasco:
exemplo/
.webassets-cache

# Coisas raspadas:
.scrapy

# Documentação da Esfinge
docs/_build/

# PyBuilder (em inglês)
.pybuilder/
alvo/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configurações do projeto Spyder
.spyderproject
.spyproject

# Configurações do projeto de corda
.ropeproject

Documentação #mkdocs
/local

#minhapi
.mypy_cache/
.dmypy.json
dmypy.json

# Verificador do tipo de pira
.pira/

#pytype analisador de tipo estático
.pytype/

# Símbolos de depuração do Cython
cython_debug/

# PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
#ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Por uma vida mais nuclear
#option (não recomendado) você pode descomentar o seguinte para ignorar toda a pasta de ideias.
#.ideia/
Rodapé